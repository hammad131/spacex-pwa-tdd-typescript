{"version":3,"sources":["components/MenuItems.tsx","components/NavBar.tsx","generated/graphql.tsx","components/Launches/Launch.tsx","components/Launches/index.tsx","components/LaunchDetails/LaunchDetail.tsx","components/LaunchDetails/index.tsx","components/Home/Home.tsx","firebase.ts","App.tsx","index.tsx","swDev.js","components/Launches/Launches.module.css","components/logo2.png","components/Navbar.module.css"],"names":["MenuItems","title","url","useStyles","makeStyles","theme","createStyles","root","flexGrow","Navbar","backgroundColor","ScrollNavbar","menuButton","marginRight","spacing","breakpoints","up","display","NavBar__button","down","color","drawer__list","height","width","flexDirection","dlinks","border","fontSize","drawer__header","borderBottom","drawer__links","justifyContent","flex","activeLink","ButtonAppBar","classes","useState","open","setOpen","nScroll","setNscroll","window","addEventListener","scrollY","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","to","styles","headlogo","src","logo","alt","map","menu","style","textDecoration","activeClassName","end","Typography","Drawer","anchor","onClose","CapsuleRange","LaunchRange","Order","CacheControlScope","LaunchProfileDocument","gql","LaunchListDocument","minWidth","alignItems","marginBottom","marginLeft","pos","text","bord","OutlinedCard","flight_number","mission_name","launch_year","launch_success","Card","cx","variant","CardContent","gutterBottom","button","CardActions","btn","Launches","baseOptions","Apollo","data","error","loading","textAlign","paddingTop","launches","details","ListDividers","missionName","launchYear","launchSite","launchSuccess","launchDetails","rocketName","rocketType","List","component","ListItem","ListItemText","Divider","divider","site_name","light","LaunchDetails","id","useParams","variables","launch","console","log","padding","launch_site","rocket","rocket_name","rocket_type","links","flickr_images","image","objectFit","Home","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","App","Notification","requestPermission","then","permission","getToken","currentToken","alert","prompt","catch","err","path","element","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","register","registration","scope","module","exports"],"mappings":"oYAKeA,EAAyB,CACpC,CACEC,MAAO,OACPC,IAAK,KAEP,CACED,MAAO,WACPC,IAAK,YAEP,CACED,MAAO,QACPC,IAAK,U,oDCHLC,EAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAGZC,OAAQ,CACNC,gBAAiB,eAEnBC,aAAc,CACZD,gBAAiB,WAEnBE,WAAW,aACTC,YAAaR,EAAMS,QAAQ,IAC1BT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAMbC,gBAAc,mBACXb,EAAMU,YAAYI,KAAK,MAAQ,CAC9BF,QAAS,SAFC,sBAKL,QALK,8BAMG,UANH,wBAOH,WAPG,8BAQG,cARH,0BASD,UATC,2BAUA,eAVA,2BAWA,UAXA,yBAYF,IAZE,cAaZ,UAAW,CACTG,MAAO,cAdG,GAiBdC,aAAc,CACZX,gBAAiB,QACjBY,OAAQ,OACRC,MAAO,QACPN,QAAS,OACTO,cAAe,UAEjBC,OAAQ,CACNF,MAAO,OACPD,OAAQ,OACRZ,gBAAiB,cACjBgB,OAAQ,OACRN,MAAO,OACPO,SAAU,SACV,UAAW,CACTjB,gBAAiB,QACjBU,MAAO,UAGXQ,eAAgB,CACdX,QAAS,OACTY,aAAc,mBAEhBC,cAAe,CACbb,QAAS,OACTO,cAAe,SACfO,eAAgB,eAChBC,KAAM,IAERC,WAAY,CACVJ,aAAc,wBAKL,SAASK,IACtB,IAAMC,EAAUhC,IADqB,EAEbiC,oBAAkB,GAFL,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGPF,oBAAkB,GAHX,mBAG9BG,EAH8B,KAGrBC,EAHqB,KAarC,OAFAC,OAAOC,iBAAiB,UAPA,WAClBD,OAAOE,QAAU,GACnBH,GAAW,GAEXA,GAAW,MAMb,yBAAKI,UAAWT,EAAQ5B,MACtB,kBAACsC,EAAA,EAAD,CACED,UAAWL,EAAUJ,EAAQxB,aAAewB,EAAQ1B,OACpDqC,SAAS,SAET,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWT,EAAQvB,WACnBQ,MAAM,UACN8B,aAAW,OACXC,QAAS,kBAAMb,GAASD,KAExB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAMe,GAAG,KACT,yBAAKR,UAAYS,IAAOC,SAAUC,IAAKC,IAAMC,IAAI,MAGhDzD,EAAU0D,KAAI,SAACC,GAAD,OACb,kBAAC,IAAD,CACEP,GAAIO,EAAKzD,IACT0D,MAAO,CAAEC,eAAgB,QACzBC,gBAAiB3B,EAAQF,WACzB8B,IAAkB,MAAbJ,EAAKzD,KAEV,kBAAC8D,EAAA,EAAD,CAAYpB,UAAWT,EAAQjB,eAAgBE,MAAM,WAClDuC,EAAK1D,aAMhB,kBAACgE,EAAA,EAAD,CAAQC,OAAO,OAAO7B,KAAMA,EAAM8B,QAAS,kBAAM7B,GAAQ,KACvD,yBAAKM,UAAWT,EAAQd,cACtB,yBAAKuB,UAAWT,EAAQP,gBACtB,kBAACoB,EAAA,EAAD,CACEY,MAAO,CAAExC,MAAO,SAChB+B,QAAS,kBAAMb,GAAQ,KAEvB,kBAAC,IAAD,OAGF,kBAAC,IAAD,CAAMc,GAAG,KACX,yBAAKR,UAAYS,IAAOC,SAAUC,IAAKC,IAAMC,IAAI,eAIjD,yBAAKb,UAAWT,EAAQL,eACrB9B,EAAU0D,KAAI,SAACC,GAAD,OACb,kBAAC,IAAD,CAAMP,GAAIO,EAAKzD,KACb,4BACE0C,UAAWT,EAAQV,OACnB0B,QAAS,kBAAMb,GAAQ,KAEtBqB,EAAK1D,e,ICmBZmE,EAKAC,EAOAC,EA+hBAC,E,imBA3iBAH,K,YAAAA,E,qBAAAA,M,cAKAC,K,gBAAAA,E,YAAAA,E,YAAAA,E,qBAAAA,M,cAOAC,K,UAAAA,E,aAAAA,M,cA+hBAC,K,gBAAAA,E,mBAAAA,M,KAyCL,IAAMC,EAAwBC,cAAH,KA+C3B,IAAMC,EAAqBD,cAAH,K,kECnyBzBtE,EAAYC,YAAW,CAC3BG,KAAM,CACJoE,SAAU,IACVjE,gBAAiB,UACjBgB,OAAQ,QACRkD,WAAY,SACZC,aAAc,GACdC,WAAY,GACZjE,YAAa,IAIfkE,IAAK,CACHF,aAAc,IAEhBG,KAAM,CACJ5D,MAAO,SAET6D,KAAM,CACJvD,OAAQ,EACRN,MAAO,WAMI,SAAS8D,EAAT,GAMN,IALPC,EAKM,EALNA,cACAC,EAIM,EAJNA,aACAC,EAGM,EAHNA,YAEAC,EACM,EADNA,eAEMnD,EAAUhC,IAEhB,OACE,kBAACoF,EAAA,EAAD,CAAM3C,UAAW4C,IAAGrD,EAAQ5B,KAAM8C,IAAO3B,QAAS+D,QAAQ,YACxD,kBAACC,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CAAYyB,QAAQ,KAAKE,cAAY,EAAC/C,UAAWT,EAAQ6C,MACxDG,EADD,cAC0B,0BAAOvB,MAAO,CAAExC,MAAOkE,EAAiB,QAAU,QAAUF,IAItF,kBAACpB,EAAA,EAAD,CAAYyB,QAAQ,KAAK7C,UAAWT,EAAQ6C,MAA5C,iBAAiEK,GACjE,kBAACrB,EAAA,EAAD,CAAYyB,QAAQ,KAAK7C,UAAWT,EAAQ6C,MAA5C,mBACmB,IACjB,0BAAMpB,MAAO,CAAExC,MAAOkE,EAAiB,QAAU,QAC9CA,EAAiB,cAAgB,YAIxC,yBAAK1C,UAAWS,IAAOuC,QACvB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMzC,GAAE,WAAM+B,GAAiBvB,MAAO,CAAEC,eAAgB,SACxD,4BAAWjB,UAAWS,IAAOyC,KAA7B,eC/DR,IAmCeC,EAnCE,WAAO,IAAD,EFu0BYC,EEv0BZ,EFw0BRC,WAA2DvB,EAAoBsB,GEv0BpFE,EADa,EACbA,KAAMC,EADO,EACPA,MAEd,OAHqB,EACAC,QAGZ,2CAGLD,IAAUD,EACL,sCAGP,oCACE,wBAAItD,UAAU,gBAAgBgB,MAAO,CAACxC,MAAM,OAAQiF,UAAU,SAAUC,WAAY,IAAK3E,SAAU,KAAnG,YACA,6BAFF,OAGGuE,QAHH,IAGGA,GAHH,UAGGA,EAAMK,gBAHT,aAGG,EAAgB7C,KACf,gBACEyB,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,YACAmB,EAJF,EAIEA,QACAlB,EALF,EAKEA,eALF,OAOE,kBAAC,EAAD,CACEH,cAAeA,EACfC,aAAcA,EACdC,YAAaA,EACbmB,QAASA,EACTlB,eAAgBA,S,2CCzBtBnF,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJgB,MAAO,OACPb,gBAAiB,UACjBU,MAAO,cAKE,SAASqF,GAAT,GAQN,IAPPC,EAOM,EAPNA,YACAC,EAMM,EANNA,WACAC,EAKM,EALNA,WACAC,EAIM,EAJNA,cACAC,EAGM,EAHNA,cACAC,EAEM,EAFNA,WACAC,EACM,EADNA,WAEM7E,EAAUhC,IAEhB,OACE,kBAAC8G,EAAA,EAAD,CAAMC,UAAU,MAAMtE,UAAWT,EAAQ5B,KAAM2C,aAAW,mBACxD,kBAACiE,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,kBAAyBV,IAE3B,kBAACW,EAAA,EAAD,MACA,kBAACF,EAAA,EAAD,CAAUvB,QAAM,EAAC0B,SAAO,GACtB,kBAACF,EAAA,EAAD,sBAA6BT,IAE/B,kBAACQ,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,sBAA6BR,EAAWW,YAE1C,kBAACF,EAAA,EAAD,CAASG,OAAK,IACd,kBAACL,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,wBAEE,0BAAMxD,MAAO,CAAExC,MAAOyF,EAAgB,QAAU,QAC7C,IACAA,EAAgB,aAAe,YAItC,kBAACQ,EAAA,EAAD,CAASG,OAAK,IACd,kBAACL,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,sBAA6BL,IAE/B,kBAACM,EAAA,EAAD,CAASG,OAAK,IACd,kBAACL,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,uBAA8BJ,IAEhC,kBAACK,EAAA,EAAD,CAASG,OAAK,IAEd,kBAACL,EAAA,EAAD,CAAUvB,QAAM,GACd,kBAACwB,EAAA,EAAD,yBAAgCN,IAElC,kBAACO,EAAA,EAAD,CAASG,OAAK,KC1DpB,IA4CeC,GA5CO,WAAO,IAAD,QJmyBUzB,EIlyB5B0B,EAAOC,cAAPD,GADkB,GJmyBU1B,EIjyBmB,CACrD4B,UAAW,CAAEF,OJiyBFzB,WAAiEzB,EAAuBwB,IIlyB7FE,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MAId,GAN0B,EAELC,QAKnB,OAAO,yCAGT,GAAID,EACF,OAAO,oCAET,IAAM0B,EAAM,OAAG3B,QAAH,IAAGA,OAAH,EAAGA,EAAM2B,OAGrB,OAFAC,QAAQC,IAAIF,GAGV,gCACE,sBAAIjE,MAAO,CAAEyC,UAAW,WAAxB,WACA,uBAAKzC,MAAO,CAAEoE,QAAS,SACrB,2BACA,6CACA,gBAAC,GAAD,CACEtB,YAAW,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAAQzC,aACrBuB,WAAU,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAAQxC,YACpBuB,WAAU,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAQI,YACpBpB,cAAa,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAQvC,eACvByB,WAAU,OAAEc,QAAF,IAAEA,GAAF,UAAEA,EAAQK,cAAV,aAAE,EAAgBC,YAC5BnB,WAAU,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAQK,cAAV,aAAE,EAAgBE,YAC5BtB,cAAa,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAQrB,UAEzB,2BAZF,OAaGqB,QAbH,IAaGA,GAbH,UAaGA,EAAQQ,aAbX,iBAaG,EAAeC,qBAblB,aAaG,EAA8B5E,KAAI,SAAC6E,GAAD,OACjC,uBACE3E,MAAO,CAAErC,MAAO,OAAQiH,UAAW,WACnCjF,IAAKgF,EACL9E,IAAI,oB,OCPDgF,OA5Bf,WACI,OACI,yBAAK7F,UAAU,aACX,yBAAKA,UAAU,WAEX,wBAAIA,UAAU,YAAd,iBAMJ,wBAAIA,UAAU,YAAd,qBAOJ,6BACA,kBAAC,IAAD,CAAMQ,GAAG,aACT,4BAAQR,UAAU,OAAlB,kB,SCbR8F,KAASC,cAXM,CACXC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKnB,IAAMC,GAAYT,KAASS,YCcZC,OAjBf,WAEE,ODKAC,aAAaC,oBAAoBC,MAAK,SAACC,GACnCL,GAAUM,WAAWF,MAAK,SAACG,GACzBC,MAAMD,GACNE,OAAO,QAASF,GAChB5B,QAAQC,IAAI2B,GAERA,GAGF5B,QAAQC,IAAI,2EAGb8B,OAAM,SAACC,GACRhC,QAAQC,IAAI,6CAA8C+B,SCjB9D,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,kBAAC,GAAD,QACzB,kBAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,kBAAC,EAAD,QACjC,kBAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,kBAAC,GAAD,YCZtC,IAAMC,GAAS,IAAIC,eAAa,CAC9BC,IAAK,2CACLC,MAAO,IAAIC,kBAEbC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,iBAAD,CAAgBP,OAAQA,IACtB,kBAAC,GAAD,QAGJQ,SAASC,eAAe,SChBlB,kBAAmBC,UACjBA,UAAUC,cAAcC,SAAS,UAAUtB,MAAK,SAASuB,GAEvDhD,QAAQC,IAAI,qDAAsD+C,EAAaC,UAC9E,SAASjB,GAEVhC,QAAQC,IAAI,sCAAuC+B,MAGrDhC,QAAQC,IAAI,4B,mBCVtBiD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,OAAS,yBAAyB,OAAS,yBAAyB,QAAU,0BAA0B,cAAgB,gCAAgC,KAAO,uBAAuB,iBAAmB,mCAAmC,YAAc,8BAA8B,OAAS,yBAAyB,YAAc,8BAA8B,UAAY,4BAA4B,IAAM,wB,mBCDxcD,EAAOC,QAAU,IAA0B,mC,mBCC3CD,EAAOC,QAAU,CAAC,SAAW,4B","file":"static/js/main.bcaa5823.chunk.js","sourcesContent":["export type menuItems = {\r\n    title: string;\r\n    url: string;\r\n  };\r\n  \r\n  export const MenuItems: menuItems[] = [\r\n    {\r\n      title: \"Home\",\r\n      url: \"/\",\r\n    },\r\n    {\r\n      title: \"Launches\",\r\n      url: \"launches\",\r\n    },\r\n    {\r\n      title: \"About\",\r\n      url: \"about\",\r\n    },\r\n    // {\r\n    //   title: \"Contact Us\",\r\n    //   url: \"contact\",\r\n    // },\r\n  ];","import React, { useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport logo from './logo2.png';\r\nimport styles from './Navbar.module.css';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    Navbar: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    ScrollNavbar: {\r\n      backgroundColor: \"#141414\",\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    // title: {\r\n    //   flexGrow: 1,\r\n    // },\r\n    NavBar__button: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n\r\n      color: \"#fff\",\r\n      paddingBottom: \"0.4rem\",\r\n      padding: \" 0 4rem\",\r\n      textTransform: \"capitalize\",\r\n      textAlign: \"center\",\r\n      fontFamily: \"montserrate\",\r\n      fontWeight: \"bolder\",\r\n      fontSize: 22,\r\n      \"&:hover\": {\r\n        color: \"lightgrey\",\r\n      },\r\n    },\r\n    drawer__list: {\r\n      backgroundColor: \"black\",\r\n      height: \"100%\",\r\n      width: \"100vw\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    dlinks: {\r\n      width: \"100%\",\r\n      height: \"10vh\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      color: \"#fff\",\r\n      fontSize: \"1.7rem\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n      },\r\n    },\r\n    drawer__header: {\r\n      display: \"flex\",\r\n      borderBottom: \"1px solid white\",\r\n    },\r\n    drawer__links: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-around\",\r\n      flex: 0.5,\r\n    },\r\n    activeLink: {\r\n      borderBottom: \"2px solid white\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [nScroll, setNscroll] = useState<boolean>(false);\r\n  const changBackground = () => {\r\n    if (window.scrollY > 80) {\r\n      setNscroll(true);\r\n    } else {\r\n      setNscroll(false);\r\n    }\r\n  };\r\n  window.addEventListener(\"scroll\", changBackground);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        className={nScroll ? classes.ScrollNavbar : classes.Navbar}\r\n        position=\"fixed\"\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link to='/' >\r\n          <img className= {styles.headlogo} src={logo} alt=\"\"/>\r\n          </Link>\r\n\r\n          {MenuItems.map((menu) => (\r\n            <NavLink\r\n              to={menu.url}\r\n              style={{ textDecoration: \"none\" }}\r\n              activeClassName={classes.activeLink}\r\n              end={menu.url === \"/\"}\r\n            >\r\n              <Typography className={classes.NavBar__button} color=\"inherit\">\r\n                {menu.title}\r\n              </Typography>\r\n            </NavLink>\r\n          ))}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"left\" open={open} onClose={() => setOpen(false)}>\r\n        <div className={classes.drawer__list}>\r\n          <div className={classes.drawer__header}>\r\n            <IconButton\r\n              style={{ color: \"white\" }}\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n\r\n            <Link to='/' >\r\n          <img className= {styles.headlogo} src={logo} alt=\"menulogo\"/>\r\n          </Link>\r\n          </div>\r\n\r\n          <div className={classes.drawer__links}>\r\n            {MenuItems.map((menu) => (\r\n              <Link to={menu.url}>\r\n                <button\r\n                  className={classes.dlinks}\r\n                  onClick={() => setOpen(false)}\r\n                >\r\n                  {menu.title}\r\n                </button>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import { gql } from '@apollo/client';\r\nimport * as Apollo from '@apollo/client';\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  /** The `Upload` scalar type represents a file upload. */\r\n  Upload: any;\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  capsule?: Maybe<Capsule>;\r\n  capsules?: Maybe<Array<Maybe<Capsule>>>;\r\n  core?: Maybe<Core>;\r\n  cores?: Maybe<Array<Maybe<Core>>>;\r\n  dragon?: Maybe<Dragon>;\r\n  dragons?: Maybe<Array<Maybe<Dragon>>>;\r\n  history?: Maybe<Array<Maybe<History>>>;\r\n  info?: Maybe<Info>;\r\n  landingpad?: Maybe<Landingpad>;\r\n  landingpads?: Maybe<Array<Maybe<Landingpad>>>;\r\n  launch?: Maybe<Launch>;\r\n  launches?: Maybe<Array<Maybe<Launch>>>;\r\n  launchpad?: Maybe<Launchpad>;\r\n  launchpads?: Maybe<Array<Maybe<Launchpad>>>;\r\n  mission?: Maybe<Mission>;\r\n  missions?: Maybe<Array<Maybe<Mission>>>;\r\n  payload?: Maybe<Payload>;\r\n  payloads?: Maybe<Array<Maybe<Payload>>>;\r\n  roadster?: Maybe<Roadster>;\r\n  rocket?: Maybe<Rocket>;\r\n  rockets?: Maybe<Array<Maybe<Rocket>>>;\r\n  ship?: Maybe<Ship>;\r\n  ships?: Maybe<Array<Maybe<Ship>>>;\r\n};\r\n\r\n\r\nexport type QueryCapsuleArgs = {\r\n  capsule_serial: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryCapsulesArgs = {\r\n  range?: Maybe<CapsuleRange>;\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryCoreArgs = {\r\n  core_serial: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryCoresArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryDragonArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryDragonsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\n\r\nexport type QueryHistoryArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n  id?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryLandingpadArgs = {\r\n  id?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryLandingpadsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\n\r\nexport type QueryLaunchArgs = {\r\n  id?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryLaunchesArgs = {\r\n  range?: Maybe<LaunchRange>;\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n  ids?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n};\r\n\r\n\r\nexport type QueryLaunchpadArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryLaunchpadsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\n\r\nexport type QueryMissionArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryMissionsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\n\r\nexport type QueryPayloadArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryPayloadsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryRocketArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryRocketsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n};\r\n\r\n\r\nexport type QueryShipArgs = {\r\n  id: Scalars['String'];\r\n};\r\n\r\n\r\nexport type QueryShipsArgs = {\r\n  limit?: Maybe<Scalars['Int']>;\r\n  offset?: Maybe<Scalars['Int']>;\r\n  order?: Maybe<Order>;\r\n  sort?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport enum CapsuleRange {\r\n  Past = 'past',\r\n  Upcoming = 'upcoming'\r\n}\r\n\r\nexport enum LaunchRange {\r\n  Latest = 'latest',\r\n  Next = 'next',\r\n  Past = 'past',\r\n  Upcoming = 'upcoming'\r\n}\r\n\r\nexport enum Order {\r\n  Asc = 'asc',\r\n  Desc = 'desc'\r\n}\r\n\r\nexport type BasicMission = {\r\n  __typename?: 'BasicMission';\r\n  name?: Maybe<Scalars['String']>;\r\n  flight?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Capsule = {\r\n  __typename?: 'Capsule';\r\n  capsule_serial?: Maybe<Scalars['String']>;\r\n  capsule_id?: Maybe<Scalars['String']>;\r\n  status?: Maybe<Scalars['String']>;\r\n  original_launch?: Maybe<Scalars['String']>;\r\n  original_launch_unix?: Maybe<Scalars['Float']>;\r\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\r\n  landings?: Maybe<Scalars['Int']>;\r\n  type?: Maybe<Scalars['String']>;\r\n  details?: Maybe<Scalars['String']>;\r\n  reuse_count?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Core = {\r\n  __typename?: 'Core';\r\n  core_serial?: Maybe<Scalars['String']>;\r\n  block?: Maybe<Scalars['Int']>;\r\n  status?: Maybe<Scalars['String']>;\r\n  original_launch?: Maybe<Scalars['String']>;\r\n  original_launch_unix?: Maybe<Scalars['Float']>;\r\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\r\n  reuse_count?: Maybe<Scalars['Int']>;\r\n  rtls_attempts?: Maybe<Scalars['Int']>;\r\n  rtls_landings?: Maybe<Scalars['Int']>;\r\n  asds_attempts?: Maybe<Scalars['Int']>;\r\n  asds_landings?: Maybe<Scalars['Int']>;\r\n  water_landing?: Maybe<Scalars['Boolean']>;\r\n  details?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Dimension = {\r\n  __typename?: 'Dimension';\r\n  meters?: Maybe<Scalars['Float']>;\r\n  feet?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type Dragon = {\r\n  __typename?: 'Dragon';\r\n  id?: Maybe<Scalars['String']>;\r\n  name?: Maybe<Scalars['String']>;\r\n  type?: Maybe<Scalars['String']>;\r\n  active?: Maybe<Scalars['Boolean']>;\r\n  crew_capacity?: Maybe<Scalars['Int']>;\r\n  sidewall_angle_deg?: Maybe<Scalars['Int']>;\r\n  orbit_duration_yr?: Maybe<Scalars['Int']>;\r\n  dry_mass_kg?: Maybe<Scalars['Int']>;\r\n  dry_mass_lb?: Maybe<Scalars['Int']>;\r\n  first_flight?: Maybe<Scalars['String']>;\r\n  heat_shield?: Maybe<HeatShield>;\r\n  thrusters?: Maybe<Array<Maybe<Thruster>>>;\r\n  launch_payload_mass?: Maybe<Mass>;\r\n  launch_payload_vol?: Maybe<PayloadVolume>;\r\n  return_payload_mass?: Maybe<Mass>;\r\n  return_payload_vol?: Maybe<PayloadVolume>;\r\n  pressurized_capsule?: Maybe<PressurizedCapsule>;\r\n  trunk?: Maybe<Trunk>;\r\n  height_w_trunk?: Maybe<Dimension>;\r\n  diameter?: Maybe<Dimension>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Engines = {\r\n  __typename?: 'Engines';\r\n  number?: Maybe<Scalars['Int']>;\r\n  type?: Maybe<Scalars['String']>;\r\n  version?: Maybe<Scalars['String']>;\r\n  layout?: Maybe<Scalars['String']>;\r\n  engine_loss_max?: Maybe<Scalars['Int']>;\r\n  propellant_1?: Maybe<Scalars['String']>;\r\n  propellant_2?: Maybe<Scalars['String']>;\r\n  thrust_sea_level?: Maybe<Thrust>;\r\n  thrust_vacuum?: Maybe<Thrust>;\r\n  thrust_to_weight?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type Fairing = {\r\n  __typename?: 'Fairing';\r\n  height?: Maybe<Dimension>;\r\n  diameter?: Maybe<Dimension>;\r\n};\r\n\r\nexport type Headquarters = {\r\n  __typename?: 'Headquarters';\r\n  address?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  state?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type HeatShield = {\r\n  __typename?: 'HeatShield';\r\n  material?: Maybe<Scalars['String']>;\r\n  size_meters?: Maybe<Scalars['Float']>;\r\n  temp_degrees?: Maybe<Scalars['Int']>;\r\n  dev_partner?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type History = {\r\n  __typename?: 'History';\r\n  id?: Maybe<Scalars['Int']>;\r\n  title?: Maybe<Scalars['String']>;\r\n  event_date_utc?: Maybe<Scalars['String']>;\r\n  event_date_unix?: Maybe<Scalars['Float']>;\r\n  flight_number?: Maybe<Scalars['Int']>;\r\n  details?: Maybe<Scalars['String']>;\r\n  links?: Maybe<HistoryLinks>;\r\n};\r\n\r\nexport type HistoryLinks = {\r\n  __typename?: 'HistoryLinks';\r\n  article?: Maybe<Scalars['String']>;\r\n  reddit?: Maybe<Scalars['String']>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Info = {\r\n  __typename?: 'Info';\r\n  name?: Maybe<Scalars['String']>;\r\n  founder?: Maybe<Scalars['String']>;\r\n  founded?: Maybe<Scalars['Int']>;\r\n  employees?: Maybe<Scalars['Int']>;\r\n  vehicles?: Maybe<Scalars['Int']>;\r\n  launch_sites?: Maybe<Scalars['Int']>;\r\n  test_sites?: Maybe<Scalars['Int']>;\r\n  ceo?: Maybe<Scalars['String']>;\r\n  cto?: Maybe<Scalars['String']>;\r\n  coo?: Maybe<Scalars['String']>;\r\n  cto_propulsion?: Maybe<Scalars['String']>;\r\n  valuation?: Maybe<Scalars['Float']>;\r\n  headquarters?: Maybe<Headquarters>;\r\n  summary?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LandingLegs = {\r\n  __typename?: 'LandingLegs';\r\n  number?: Maybe<Scalars['Int']>;\r\n  material?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Landingpad = {\r\n  __typename?: 'Landingpad';\r\n  id?: Maybe<Scalars['String']>;\r\n  full_name?: Maybe<Scalars['String']>;\r\n  status?: Maybe<Scalars['String']>;\r\n  location?: Maybe<Location>;\r\n  landing_type?: Maybe<Scalars['String']>;\r\n  attempted_landings?: Maybe<Scalars['Int']>;\r\n  successful_landings?: Maybe<Scalars['Int']>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  details?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Launch = {\r\n  __typename?: 'Launch';\r\n  flight_number?: Maybe<Scalars['Int']>;\r\n  mission_id?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  mission_name?: Maybe<Scalars['String']>;\r\n  launch_year?: Maybe<Scalars['Int']>;\r\n  launch_date_unix?: Maybe<Scalars['Float']>;\r\n  launch_date_utc?: Maybe<Scalars['String']>;\r\n  launch_date_local?: Maybe<Scalars['String']>;\r\n  is_tentative?: Maybe<Scalars['Boolean']>;\r\n  tentative_max_precision?: Maybe<Scalars['String']>;\r\n  tbd?: Maybe<Scalars['Boolean']>;\r\n  launch_window?: Maybe<Scalars['Int']>;\r\n  rocket?: Maybe<LaunchRocket>;\r\n  ships?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  telemetry?: Maybe<LaunchTelemetry>;\r\n  launch_site?: Maybe<LaunchSite>;\r\n  launch_success?: Maybe<Scalars['Boolean']>;\r\n  links?: Maybe<LaunchLinks>;\r\n  details?: Maybe<Scalars['String']>;\r\n  upcoming?: Maybe<Scalars['Boolean']>;\r\n  static_fire_date_utc?: Maybe<Scalars['String']>;\r\n  static_fire_date_unix?: Maybe<Scalars['Float']>;\r\n  timeline?: Maybe<LaunchTimeline>;\r\n};\r\n\r\nexport type LaunchLinks = {\r\n  __typename?: 'LaunchLinks';\r\n  mission_patch?: Maybe<Scalars['String']>;\r\n  mission_patch_small?: Maybe<Scalars['String']>;\r\n  reddit_campaign?: Maybe<Scalars['String']>;\r\n  reddit_launch?: Maybe<Scalars['String']>;\r\n  reddit_recovery?: Maybe<Scalars['String']>;\r\n  reddit_media?: Maybe<Scalars['String']>;\r\n  presskit?: Maybe<Scalars['String']>;\r\n  article_link?: Maybe<Scalars['String']>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  video_link?: Maybe<Scalars['String']>;\r\n  youtube_id?: Maybe<Scalars['String']>;\r\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n};\r\n\r\nexport type Launchpad = {\r\n  __typename?: 'Launchpad';\r\n  id?: Maybe<Scalars['Int']>;\r\n  status?: Maybe<Scalars['String']>;\r\n  location?: Maybe<Location>;\r\n  vehicles_launched?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  attempted_launches?: Maybe<Scalars['Int']>;\r\n  successful_launches?: Maybe<Scalars['Int']>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  details?: Maybe<Scalars['String']>;\r\n  site_id?: Maybe<Scalars['String']>;\r\n  site_name_long?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LaunchRocket = {\r\n  __typename?: 'LaunchRocket';\r\n  rocket_id?: Maybe<Scalars['String']>;\r\n  rocket_name?: Maybe<Scalars['String']>;\r\n  rocket_type?: Maybe<Scalars['String']>;\r\n  first_stage?: Maybe<LaunchRocketFirstStage>;\r\n  second_stage?: Maybe<LaunchRocketSecondStage>;\r\n  fairings?: Maybe<LaunchRocketFairings>;\r\n};\r\n\r\nexport type LaunchRocketFairings = {\r\n  __typename?: 'LaunchRocketFairings';\r\n  reused?: Maybe<Scalars['Boolean']>;\r\n  recovery_attempt?: Maybe<Scalars['Boolean']>;\r\n  recovered?: Maybe<Scalars['Boolean']>;\r\n  ship?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LaunchRocketFirstStage = {\r\n  __typename?: 'LaunchRocketFirstStage';\r\n  cores?: Maybe<Array<Maybe<LaunchRocketFirstStageCore>>>;\r\n};\r\n\r\nexport type LaunchRocketFirstStageCore = {\r\n  __typename?: 'LaunchRocketFirstStageCore';\r\n  core_serial?: Maybe<Scalars['String']>;\r\n  flight?: Maybe<Scalars['Int']>;\r\n  block?: Maybe<Scalars['Int']>;\r\n  gridfins?: Maybe<Scalars['Boolean']>;\r\n  legs?: Maybe<Scalars['Boolean']>;\r\n  reused?: Maybe<Scalars['Boolean']>;\r\n  land_success?: Maybe<Scalars['Boolean']>;\r\n  landing_intent?: Maybe<Scalars['Boolean']>;\r\n  landing_type?: Maybe<Scalars['String']>;\r\n  landing_vehicle?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LaunchRocketSecondStage = {\r\n  __typename?: 'LaunchRocketSecondStage';\r\n  block?: Maybe<Scalars['Int']>;\r\n  payloads?: Maybe<Array<Maybe<Payload>>>;\r\n};\r\n\r\nexport type LaunchSite = {\r\n  __typename?: 'LaunchSite';\r\n  site_id?: Maybe<Scalars['String']>;\r\n  site_name?: Maybe<Scalars['String']>;\r\n  site_name_long?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LaunchTelemetry = {\r\n  __typename?: 'LaunchTelemetry';\r\n  flight_club?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LaunchTimeline = {\r\n  __typename?: 'LaunchTimeline';\r\n  webcast_liftoff?: Maybe<Scalars['Int']>;\r\n  go_for_prop_loading?: Maybe<Scalars['Int']>;\r\n  rp1_loading?: Maybe<Scalars['Int']>;\r\n  stage1_rp1_loading?: Maybe<Scalars['Int']>;\r\n  stage1_lox_loading?: Maybe<Scalars['Int']>;\r\n  stage2_rp1_loading?: Maybe<Scalars['Int']>;\r\n  stage2_lox_loading?: Maybe<Scalars['Int']>;\r\n  engine_chill?: Maybe<Scalars['Int']>;\r\n  prelaunch_checks?: Maybe<Scalars['Int']>;\r\n  propellant_pressurization?: Maybe<Scalars['Int']>;\r\n  go_for_launch?: Maybe<Scalars['Int']>;\r\n  ignition?: Maybe<Scalars['Int']>;\r\n  liftoff?: Maybe<Scalars['Int']>;\r\n  maxq?: Maybe<Scalars['Int']>;\r\n  beco?: Maybe<Scalars['Int']>;\r\n  side_core_sep?: Maybe<Scalars['Int']>;\r\n  side_core_boostback?: Maybe<Scalars['Int']>;\r\n  meco?: Maybe<Scalars['Int']>;\r\n  stage_sep?: Maybe<Scalars['Int']>;\r\n  center_stage_sep?: Maybe<Scalars['Int']>;\r\n  second_stage_ignition?: Maybe<Scalars['Int']>;\r\n  center_core_boostback?: Maybe<Scalars['Int']>;\r\n  fairing_deploy?: Maybe<Scalars['Int']>;\r\n  first_stage_entry_burn?: Maybe<Scalars['Int']>;\r\n  side_core_entry_burn?: Maybe<Scalars['Int']>;\r\n  center_core_entry_burn?: Maybe<Scalars['Int']>;\r\n  seco_1?: Maybe<Scalars['Int']>;\r\n  first_stage_landing_burn?: Maybe<Scalars['Int']>;\r\n  first_stage_landing?: Maybe<Scalars['Int']>;\r\n  side_core_landing?: Maybe<Scalars['Int']>;\r\n  center_core_landing?: Maybe<Scalars['Int']>;\r\n  second_stage_restart?: Maybe<Scalars['Int']>;\r\n  seco_2?: Maybe<Scalars['Int']>;\r\n  payload_deploy?: Maybe<Scalars['Int']>;\r\n  payload_deploy_1?: Maybe<Scalars['Int']>;\r\n  payload_deploy_2?: Maybe<Scalars['Int']>;\r\n  dragon_separation?: Maybe<Scalars['Int']>;\r\n  dragon_solar_deploy?: Maybe<Scalars['Int']>;\r\n  dragon_bay_door_deploy?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Location = {\r\n  __typename?: 'Location';\r\n  name?: Maybe<Scalars['String']>;\r\n  region?: Maybe<Scalars['String']>;\r\n  latitude?: Maybe<Scalars['Float']>;\r\n  longitude?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type Mass = {\r\n  __typename?: 'Mass';\r\n  kg?: Maybe<Scalars['Int']>;\r\n  lb?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Mission = {\r\n  __typename?: 'Mission';\r\n  mission_name?: Maybe<Scalars['String']>;\r\n  mission_id?: Maybe<Scalars['String']>;\r\n  manufacturers?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  payload_ids?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  website?: Maybe<Scalars['String']>;\r\n  twitter?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Payload = {\r\n  __typename?: 'Payload';\r\n  payload_id?: Maybe<Scalars['String']>;\r\n  norad_id?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  cap_serial?: Maybe<Scalars['String']>;\r\n  reused?: Maybe<Scalars['Boolean']>;\r\n  customers?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  nationality?: Maybe<Scalars['String']>;\r\n  manufacturer?: Maybe<Scalars['String']>;\r\n  payload_type?: Maybe<Scalars['String']>;\r\n  payload_mass_kg?: Maybe<Scalars['Float']>;\r\n  payload_mass_lbs?: Maybe<Scalars['Float']>;\r\n  orbit?: Maybe<Scalars['String']>;\r\n  orbit_params?: Maybe<PayloadOrbitParams>;\r\n  mass_returned_kg?: Maybe<Scalars['Float']>;\r\n  mass_returned_lbs?: Maybe<Scalars['Float']>;\r\n  flight_time_sec?: Maybe<Scalars['Int']>;\r\n  cargo_manifest?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type PayloadOrbitParams = {\r\n  __typename?: 'PayloadOrbitParams';\r\n  reference_system?: Maybe<Scalars['String']>;\r\n  regime?: Maybe<Scalars['String']>;\r\n  longitude?: Maybe<Scalars['Float']>;\r\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\r\n  eccentricity?: Maybe<Scalars['Float']>;\r\n  periapsis_km?: Maybe<Scalars['Float']>;\r\n  apoapsis_km?: Maybe<Scalars['Float']>;\r\n  inclination_deg?: Maybe<Scalars['Float']>;\r\n  period_min?: Maybe<Scalars['Float']>;\r\n  lifespan_years?: Maybe<Scalars['Float']>;\r\n  epoch?: Maybe<Scalars['String']>;\r\n  mean_motion?: Maybe<Scalars['Float']>;\r\n  raan?: Maybe<Scalars['Float']>;\r\n  arg_of_pericenter?: Maybe<Scalars['Float']>;\r\n  mean_anomaly?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type PayloadVolume = {\r\n  __typename?: 'PayloadVolume';\r\n  cubic_meters?: Maybe<Scalars['Int']>;\r\n  cubic_feet?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Position = {\r\n  __typename?: 'Position';\r\n  latitude?: Maybe<Scalars['Float']>;\r\n  longitude?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type PressurizedCapsule = {\r\n  __typename?: 'PressurizedCapsule';\r\n  payload_volume?: Maybe<PayloadVolume>;\r\n};\r\n\r\nexport type Roadster = {\r\n  __typename?: 'Roadster';\r\n  name: Scalars['String'];\r\n  launch_date_utc?: Maybe<Scalars['String']>;\r\n  launch_date_unix?: Maybe<Scalars['Float']>;\r\n  launch_mass_kg?: Maybe<Scalars['Int']>;\r\n  launch_mass_lbs?: Maybe<Scalars['Int']>;\r\n  norad_id?: Maybe<Scalars['Int']>;\r\n  epoch_jd?: Maybe<Scalars['Float']>;\r\n  orbit_type?: Maybe<Scalars['String']>;\r\n  apoapsis_au?: Maybe<Scalars['Float']>;\r\n  semi_major_axis_au?: Maybe<Scalars['Float']>;\r\n  eccentricity?: Maybe<Scalars['Float']>;\r\n  inclination?: Maybe<Scalars['Float']>;\r\n  longitude?: Maybe<Scalars['Float']>;\r\n  periapsis_arg?: Maybe<Scalars['Float']>;\r\n  period_days?: Maybe<Scalars['Float']>;\r\n  speed_kph?: Maybe<Scalars['Float']>;\r\n  speed_mph?: Maybe<Scalars['Float']>;\r\n  earth_distance_km?: Maybe<Scalars['Float']>;\r\n  earth_distance_mi?: Maybe<Scalars['Float']>;\r\n  mars_distance_km?: Maybe<Scalars['Float']>;\r\n  mars_distance_mi?: Maybe<Scalars['Float']>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  details?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Rocket = {\r\n  __typename?: 'Rocket';\r\n  id?: Maybe<Scalars['Int']>;\r\n  active?: Maybe<Scalars['Boolean']>;\r\n  stages?: Maybe<Scalars['Int']>;\r\n  boosters?: Maybe<Scalars['Int']>;\r\n  cost_per_launch?: Maybe<Scalars['Int']>;\r\n  success_rate_pct?: Maybe<Scalars['Float']>;\r\n  first_flight?: Maybe<Scalars['String']>;\r\n  country?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  height?: Maybe<Dimension>;\r\n  diameter?: Maybe<Dimension>;\r\n  mass?: Maybe<Mass>;\r\n  payload_weights?: Maybe<Array<Maybe<RocketPayloadWeight>>>;\r\n  first_stage?: Maybe<RocketFirstStage>;\r\n  second_stage?: Maybe<RocketSecondStage>;\r\n  engines?: Maybe<Engines>;\r\n  landing_legs?: Maybe<LandingLegs>;\r\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  wikipedia?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  rocket_id?: Maybe<Scalars['String']>;\r\n  rocket_name?: Maybe<Scalars['String']>;\r\n  rocket_type?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type RocketFirstStage = {\r\n  __typename?: 'RocketFirstStage';\r\n  reusable?: Maybe<Scalars['Boolean']>;\r\n  engines?: Maybe<Scalars['Int']>;\r\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\r\n  burn_time_sec?: Maybe<Scalars['Int']>;\r\n  thrust_sea_level?: Maybe<Thrust>;\r\n  thrust_vacuum?: Maybe<Thrust>;\r\n};\r\n\r\nexport type RocketPayload = {\r\n  __typename?: 'RocketPayload';\r\n  option_1?: Maybe<Scalars['String']>;\r\n  option_2?: Maybe<Scalars['String']>;\r\n  composite_fairing?: Maybe<Fairing>;\r\n};\r\n\r\nexport type RocketPayloadWeight = {\r\n  __typename?: 'RocketPayloadWeight';\r\n  id?: Maybe<Scalars['String']>;\r\n  name?: Maybe<Scalars['String']>;\r\n  kg?: Maybe<Scalars['Float']>;\r\n  lb?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type RocketSecondStage = {\r\n  __typename?: 'RocketSecondStage';\r\n  engines?: Maybe<Scalars['Int']>;\r\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\r\n  burn_time_sec?: Maybe<Scalars['Int']>;\r\n  thrust?: Maybe<Thrust>;\r\n  payloads?: Maybe<RocketPayload>;\r\n};\r\n\r\nexport type Ship = {\r\n  __typename?: 'Ship';\r\n  ship_id?: Maybe<Scalars['String']>;\r\n  ship_name?: Maybe<Scalars['String']>;\r\n  ship_model?: Maybe<Scalars['String']>;\r\n  ship_type?: Maybe<Scalars['String']>;\r\n  roles?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  active?: Maybe<Scalars['Boolean']>;\r\n  imo?: Maybe<Scalars['Int']>;\r\n  mmsi?: Maybe<Scalars['Int']>;\r\n  abs?: Maybe<Scalars['Int']>;\r\n  class?: Maybe<Scalars['Int']>;\r\n  weight_lbs?: Maybe<Scalars['Float']>;\r\n  weight_kg?: Maybe<Scalars['Float']>;\r\n  year_built?: Maybe<Scalars['Int']>;\r\n  home_port?: Maybe<Scalars['String']>;\r\n  status?: Maybe<Scalars['String']>;\r\n  speed_kn?: Maybe<Scalars['Float']>;\r\n  course_deg?: Maybe<Scalars['Float']>;\r\n  position?: Maybe<Position>;\r\n  successful_landings?: Maybe<Scalars['Int']>;\r\n  attempted_landings?: Maybe<Scalars['Int']>;\r\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\r\n  url?: Maybe<Scalars['String']>;\r\n  image?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Thrust = {\r\n  __typename?: 'Thrust';\r\n  kN?: Maybe<Scalars['Float']>;\r\n  lbf?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type Thruster = {\r\n  __typename?: 'Thruster';\r\n  type?: Maybe<Scalars['String']>;\r\n  amount?: Maybe<Scalars['Int']>;\r\n  pods?: Maybe<Scalars['Int']>;\r\n  fuel_1?: Maybe<Scalars['String']>;\r\n  fuel_2?: Maybe<Scalars['String']>;\r\n  thrust?: Maybe<Thrust>;\r\n};\r\n\r\nexport type Trunk = {\r\n  __typename?: 'Trunk';\r\n  trunk_volume?: Maybe<PayloadVolume>;\r\n  cargo?: Maybe<TrunkCargo>;\r\n};\r\n\r\nexport type TrunkCargo = {\r\n  __typename?: 'TrunkCargo';\r\n  solar_array?: Maybe<Scalars['Int']>;\r\n  unpressurized_cargo?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport enum CacheControlScope {\r\n  Public = 'PUBLIC',\r\n  Private = 'PRIVATE'\r\n}\r\n\r\n\r\nexport type LaunchProfileQueryVariables = Exact<{\r\n  id: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type LaunchProfileQuery = (\r\n  { __typename?: 'Query' }\r\n  & { launch?: Maybe<(\r\n    { __typename?: 'Launch' }\r\n    & Pick<Launch, 'flight_number' | 'mission_name' | 'launch_year' | 'launch_success' | 'details'>\r\n    & { launch_site?: Maybe<(\r\n      { __typename?: 'LaunchSite' }\r\n      & Pick<LaunchSite, 'site_name'>\r\n    )>, rocket?: Maybe<(\r\n      { __typename?: 'LaunchRocket' }\r\n      & Pick<LaunchRocket, 'rocket_name' | 'rocket_type'>\r\n    )>, links?: Maybe<(\r\n      { __typename?: 'LaunchLinks' }\r\n      & Pick<LaunchLinks, 'flickr_images'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type LaunchListQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type LaunchListQuery = (\r\n  { __typename?: 'Query' }\r\n  & { launches?: Maybe<Array<Maybe<(\r\n    { __typename?: 'Launch' }\r\n    & Pick<Launch, 'flight_number' | 'mission_name' | 'launch_year' | 'details' | 'launch_success'>\r\n  )>>> }\r\n);\r\n\r\n\r\nexport const LaunchProfileDocument = gql`\r\n    query LaunchProfile($id: String!) {\r\n  launch(id: $id) {\r\n    flight_number\r\n    mission_name\r\n    launch_year\r\n    launch_success\r\n    details\r\n    launch_site {\r\n      site_name\r\n    }\r\n    rocket {\r\n      rocket_name\r\n      rocket_type\r\n    }\r\n    links {\r\n      flickr_images\r\n    }\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useLaunchProfileQuery__\r\n *\r\n * To run a query within a React component, call `useLaunchProfileQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useLaunchProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useLaunchProfileQuery({\r\n *   variables: {\r\n *      id: // value for 'id'\r\n *   },\r\n * });\r\n */\r\nexport function useLaunchProfileQuery(baseOptions?: Apollo.QueryHookOptions<LaunchProfileQuery, LaunchProfileQueryVariables>) {\r\n        return Apollo.useQuery<LaunchProfileQuery, LaunchProfileQueryVariables>(LaunchProfileDocument, baseOptions);\r\n      }\r\nexport function useLaunchProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchProfileQuery, LaunchProfileQueryVariables>) {\r\n          return Apollo.useLazyQuery<LaunchProfileQuery, LaunchProfileQueryVariables>(LaunchProfileDocument, baseOptions);\r\n        }\r\nexport type LaunchProfileQueryHookResult = ReturnType<typeof useLaunchProfileQuery>;\r\nexport type LaunchProfileLazyQueryHookResult = ReturnType<typeof useLaunchProfileLazyQuery>;\r\nexport type LaunchProfileQueryResult = Apollo.QueryResult<LaunchProfileQuery, LaunchProfileQueryVariables>;\r\nexport const LaunchListDocument = gql`\r\n    query LaunchList {\r\n  launches {\r\n    flight_number\r\n    mission_name\r\n    launch_year\r\n    details\r\n    launch_success\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useLaunchListQuery__\r\n *\r\n * To run a query within a React component, call `useLaunchListQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useLaunchListQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useLaunchListQuery({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useLaunchListQuery(baseOptions?: Apollo.QueryHookOptions<LaunchListQuery, LaunchListQueryVariables>) {\r\n        return Apollo.useQuery<LaunchListQuery, LaunchListQueryVariables>(LaunchListDocument, baseOptions);\r\n      }\r\nexport function useLaunchListLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchListQuery, LaunchListQueryVariables>) {\r\n          return Apollo.useLazyQuery<LaunchListQuery, LaunchListQueryVariables>(LaunchListDocument, baseOptions);\r\n        }\r\nexport type LaunchListQueryHookResult = ReturnType<typeof useLaunchListQuery>;\r\nexport type LaunchListLazyQueryHookResult = ReturnType<typeof useLaunchListLazyQuery>;\r\nexport type LaunchListQueryResult = Apollo.QueryResult<LaunchListQuery, LaunchListQueryVariables>;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport styles from './Launches.module.css';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: \"#1F1F1F\",\r\n    border: \"white\",\r\n    alignItems: \"center\",\r\n    marginBottom: 25,\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    \r\n  },\r\n\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n  bord: {\r\n    border: 1,\r\n    color: \"white\",\r\n\r\n  },\r\n\r\n});\r\n\r\nexport default function OutlinedCard({\r\n  flight_number,\r\n  mission_name,\r\n  launch_year,\r\n\r\n  launch_success,\r\n}: any) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={cx(classes.root, styles.border)} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h4\" gutterBottom className={classes.text}>\r\n        {flight_number}. Mission: <span  style={{ color: launch_success ? \"green\" : \"red\" }}>{mission_name}</span>\r\n        </Typography>\r\n        \r\n\r\n        <Typography variant=\"h6\" className={classes.text}>Launch year : {launch_year}</Typography>\r\n        <Typography variant=\"h6\" className={classes.text}>\r\n          Launch success :{\" \"}\r\n          <span style={{ color: launch_success ? \"green\" : \"red\" }}>\r\n            {launch_success ? \"Successful \" : \"Failed\"}\r\n          </span>\r\n        </Typography>\r\n      </CardContent>\r\n      <div className={styles.button}>\r\n      <CardActions >\r\n        <Link to={`/${flight_number}`} style={{ textDecoration: \"none\" }}>\r\n        <   button className={styles.btn}>Details</button>\r\n        </Link>\r\n      </CardActions>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLaunchListQuery } from \"../../generated/graphql\";\r\nimport Launch from \"./Launch\";\r\n\r\nimport './Launches.module.css';\r\nconst Launches = () => {\r\n  const { data, error, loading } = useLaunchListQuery();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error || !data) {\r\n    return <div>ERROR</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <h1 className=\"launchHeading\" style={{color:\"#fff\", textAlign:\"center\", paddingTop: 100, fontSize: 50}}>Launches</h1>\r\n      <br />\r\n      {data?.launches?.map(\r\n        ({\r\n          flight_number,\r\n          mission_name,\r\n          launch_year,\r\n          details,\r\n          launch_success,\r\n        }: any) => (\r\n          <Launch\r\n            flight_number={flight_number}\r\n            mission_name={mission_name}\r\n            launch_year={launch_year}\r\n            details={details}\r\n            launch_success={launch_success}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Launches;\r\n","import React from \"react\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: '#3d3d3d',\r\n      color: 'White'\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ListDividers({\r\n  missionName,\r\n  launchYear,\r\n  launchSite,\r\n  launchSuccess,\r\n  launchDetails,\r\n  rocketName,\r\n  rocketType,\r\n}: any) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n      <ListItem button>\r\n        <ListItemText>Mission : {missionName}</ListItemText>\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem button divider>\r\n        <ListItemText>Launch year : {launchYear}</ListItemText>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemText>Launch site : {launchSite.site_name}</ListItemText>\r\n      </ListItem>\r\n      <Divider light />\r\n      <ListItem button>\r\n        <ListItemText>\r\n          Launch Success :\r\n          <span style={{ color: launchSuccess ? \"green\" : \"red\" }}>\r\n            {\" \"}\r\n            {launchSuccess ? \"Successful\" : \"failed\"}\r\n          </span>\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider light />\r\n      <ListItem button>\r\n        <ListItemText>Rocket Name : {rocketName}</ListItemText>\r\n      </ListItem>\r\n      <Divider light />\r\n      <ListItem button>\r\n        <ListItemText> Rocket Type : {rocketType}</ListItemText>\r\n      </ListItem>\r\n      <Divider light />\r\n\r\n      <ListItem button>\r\n        <ListItemText>Launch Details : {launchDetails}</ListItemText>\r\n      </ListItem>\r\n      <Divider light />\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useLaunchProfileQuery } from \"../../generated/graphql\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LaunchDetail from \"./LaunchDetail\";\r\n\r\nconst LaunchDetails = () => {\r\n  const { id } = useParams();\r\n  const { data, error, loading } = useLaunchProfileQuery({\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>ERROR</div>;\r\n  }\r\n  const launch = data?.launch;\r\n  console.log(launch);\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: \"center\" }}>Details</h1>\r\n      <div style={{ padding: \"1rem\" }}>\r\n        <br />\r\n        <h2>Launch Details:</h2>\r\n        <LaunchDetail\r\n          missionName={launch?.mission_name}\r\n          launchYear={launch?.launch_year}\r\n          launchSite={launch?.launch_site}\r\n          launchSuccess={launch?.launch_success}\r\n          rocketName={launch?.rocket?.rocket_name}\r\n          rocketType={launch?.rocket?.rocket_type}\r\n          launchDetails={launch?.details}\r\n        />\r\n        <br />\r\n        {launch?.links?.flickr_images?.map((image: any) => (\r\n          <img\r\n            style={{ width: \"100%\", objectFit: \"contain\" }}\r\n            src={image}\r\n            alt=\"launchPic\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LaunchDetails;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from 'react'\r\nimport './Home.css';\r\n\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='heading'>\r\n            \r\n                <h3 className='heading1'>\r\n                Recent Launch\r\n                </h3>\r\n            \r\n           \r\n            \r\n            <h1 className='heading2'>\r\n                Starlink Mission\r\n            </h1>\r\n            \r\n            </div>\r\n        \r\n\r\n        <br />\r\n        <Link to=\"/launches\">\r\n        <button className=\"btn\">Explore Now</button>\r\n        </Link>\r\n        </div>\r\n       \r\n        \r\n    )   \r\n}\r\n\r\nexport default Home;\r\n","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyC7se7jnnD2YJypF6yW_uSkWCFRvQkCK_E\",\r\n    authDomain: \"spacex-fb193.firebaseapp.com\",\r\n    projectId: \"spacex-fb193\",\r\n    storageBucket: \"spacex-fb193.appspot.com\",\r\n    messagingSenderId: \"542050584464\",\r\n    appId: \"1:542050584464:web:2eafe0f61efaaa34199515\",\r\n    measurementId: \"G-6RQC40J5VT\"\r\n\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nconst messaging = firebase.messaging();\r\n\r\nexport function configNotification() {\r\n    \r\n  Notification.requestPermission().then((permission) => {\r\n      messaging.getToken().then((currentToken) => {\r\n        alert(currentToken);\r\n        prompt('token', currentToken);\r\n        console.log(currentToken)\r\n        \r\n        if (currentToken) {\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No registration token available. Request permission to generate one.');\r\n\r\n        }\r\n      }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n\r\n      });\r\n  \r\n  \r\n  })\r\n\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from './components/NavBar'\r\n\r\nimport Launches from \"./components/Launches\";\r\nimport LaunchDetails from \"./components/LaunchDetails\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport {configNotification} from './firebase';\r\n\r\n\r\nfunction App() {\r\n  configNotification()\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavBar />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/launches\" element={<Launches />}/>\r\n          <Route path=\"/:id\" element={<LaunchDetails />} />\r\n          \r\n        </Routes>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {swDev} from './swDev'\r\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://spacexdata.herokuapp.com/graphql\",\r\n  cache: new InMemoryCache(),\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nswDev();\r\n","export function swDev() {\r\n\r\n    if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          });\r\n      } else {\r\n          console.log(\"ServiceWorker not found\")\r\n      }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toppad\":\"Launches_toppad__3WjLA\",\"border\":\"Launches_border__3pmUp\",\"button\":\"Launches_button__2MybJ\",\"heading\":\"Launches_heading__1MK_L\",\"launchHeading\":\"Launches_launchHeading__gqY1K\",\"root\":\"Launches_root__2Vqn1\",\"headingContainer\":\"Launches_headingContainer__1wa4o\",\"sfContainer\":\"Launches_sfContainer__2S-RK\",\"sfMain\":\"Launches_sfMain__3ixHN\",\"succesBlock\":\"Launches_succesBlock__PRnV6\",\"failBlock\":\"Launches_failBlock__2Wbew\",\"btn\":\"Launches_btn__34bOn\"};","module.exports = __webpack_public_path__ + \"static/media/logo2.f751c040.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlogo\":\"Navbar_headlogo__3vrqI\"};"],"sourceRoot":""}